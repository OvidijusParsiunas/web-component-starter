{"version":3,"file":"web-component-starter.js","sourceRoot":"","sources":["../src/web-component-starter.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,MAAM,EAAC,MAAM,UAAU,CAAC;AAEhC,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;AACpD,QAAQ,CAAC,SAAS,GAAG;IACjB,MAAM;;CAET,CAAC;AAEF,MAAM,OAAO,mBAAoB,SAAQ,WAAW;IAClD;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QAChF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;IAED,0DAA0D;IAC1D,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC;IAED,IAAI,QAAQ,CAAC,QAAQ;QACnB,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QACpC,IAAI,CAAC,UAAW,CAAC,cAAc,CAAC,UAAU,CAAiB,CAAC,SAAS,GAAG,QAAQ,CAAC;IACpF,CAAC;IAED,MAAM,KAAK,kBAAkB;QAC3B,OAAO,CAAC,UAAU,CAAC,CAAC;IACtB,CAAC;IAED,wBAAwB,CAAC,QAAgB,EAAE,QAAgB,EAAE,QAAgB;QAC3E,IAAI,QAAQ,KAAK,QAAQ;YAAE,OAAO;QAClC,IAAI,QAAQ,KAAK,UAAU;YAAE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IACxD,CAAC;CACF;AAED,cAAc,CAAC,MAAM,CAAC,uBAAuB,EAAE,mBAAmB,CAAC,CAAC","sourcesContent":["import {styles} from './styles';\n\nconst template = document.createElement(\"template\");\ntemplate.innerHTML = `\n  ${styles}\n  <div class=\"text\">Web component says: <span id=\"greeting\"></span></div>\n`;\n\nexport class WebComponentStarter extends HTMLElement {\n  constructor () {\n    super();\n    this.attachShadow({mode: 'open'}).appendChild(template.content.cloneNode(true));\n    this.greeting = \"Hi\";\n  }\n\n  // getter and setter needed for property change monitoring\n  get greeting(): string {\n    return this.greeting;\n  }\n  \n  set greeting(newValue) {\n    console.log('greeting has changed!');\n    (this.shadowRoot!.getElementById(\"greeting\") as HTMLElement).innerText = newValue;\n  }\n\n  static get observedAttributes() {\n    return [\"greeting\"];\n  }\n\n  attributeChangedCallback(property: string, oldValue: string, newValue: string) {\n    if (oldValue === newValue) return;\n    if (property === 'greeting') this.greeting = newValue;\n  }\n}\n\ncustomElements.define('web-component-starter', WebComponentStarter);\n\n\n// The following type makes it easier for other projects to use this component with TypeScript\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'web-component-starter': WebComponentStarter;\n  }\n}"]}